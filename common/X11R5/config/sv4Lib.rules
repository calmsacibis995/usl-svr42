XCOMM $XConsortium: sv4Lib.rules,v 1.8 91/07/19 15:38:53 rws Exp $

/*
 * SVR4 shared library rules
 */

#ifndef HasSharedLibraries
#define HasSharedLibraries YES 
#endif
#ifndef SharedDataSeparation
#define SharedDataSeparation NO
#endif
#ifndef SharedCodeDef
#define SharedCodeDef /**/
#endif
#ifndef SharedLibraryDef
#define SharedLibraryDef /**/
#endif
#ifndef ShLibIncludeFile
#define ShLibIncludeFile <sv4Lib.tmpl>
#endif
#ifndef SharedLibraryLoadFlags
#define SharedLibraryLoadFlags -G -z text
#endif
#ifndef PositionIndependentCFlags
#define PositionIndependentCFlags -K PIC
#endif

/*
 * InstallSharedLibrary - generate rules to install the shared library.
 */
#ifndef InstallSharedLibrary
#define	InstallSharedLibrary(libname,rev,dest)				@@\
install:: Concat(lib,libname.so.rev) 					@@\
	MakeDir($(DESTDIR)dest)						@@\
	$(INSTALL) $(INSTLIBFLAGS) Concat(lib,libname.so.rev) $(DESTDIR)dest; @@\
	(cd $(DESTDIR)dest; $(RM) Concat(lib,libname.so); $(LN) Concat(lib,libname.so.rev) Concat(lib,libname.so))
#endif /* InstallSharedLibrary */

#if !UTSXENV
#ifndef InstallSharedLibrary1
#define	InstallSharedLibrary1(libname,dest)		@@\
install:: libname		 			@@\
	MakeDir($(DESTDIR)dest)				@@\
	$(INSTALL) $(INSTLIBFLAGS) libname $(DESTDIR)dest
#endif /* InstallSharedLibrary1 */

#else

#ifndef InstallSharedLibrary1
#define	InstallSharedLibrary1(libname,dest)		@@\
install:: libname		 			@@\
	MakeDir($(DESTDIR)dest)				@@\
	$(INSTALL) $(INSTLIBFLAGS) libname $(DESTDIR)dest
#endif /* InstallSharedLibrary1 */

#endif

/*
 * InstallSharedLibraryData - generate rules to install the shared library data
 */
#ifndef InstallSharedLibraryData
#define	InstallSharedLibraryData(libname,rev,dest)
#endif /* InstallSharedLibraryData */


/*
 * SharedLibraryTarget - generate rules to create a shared library;
 * build it into a different name so that we do not hose people by having
 * the library gone for long periods.
 */
#ifndef SharedLibraryTarget
#define SharedLibraryTarget(libname,rev,solist,down,up)			@@\
AllTarget(Concat(lib,libname.so.rev))					@@\
									@@\
Concat(lib,libname.so.rev):  solist					@@\
	$(RM) $@~							@@\
	(cd down; $(LD) -o up/$@~ $(SHLIBLDFLAGS) -h $@ solist)		@@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@						@@\
	$(RM) Concat(lib,libname.so)					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.so.rev) Concat(lib,libname.so)

#endif /* SharedLibraryTarget */

#ifndef SharedLibraryTarget_a
#define SharedLibraryTarget_a(libname,rev,solist,extlibs,down,up)			@@\
AllTarget(Concat(lib,libname.so.rev))					@@\
									@@\
Concat(lib,libname.so.rev):  solist					@@\
	$(RM) $@~							@@\
	(cd down; $(LD) -o up/$@~ $(SHLIBLDFLAGS) -h $@ solist extlibs)	@@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@						@@\
	$(RM) Concat(lib,libname.so)					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.so.rev) Concat(lib,libname.so)

#endif /* SharedLibraryTarget_a */

#ifndef SpecialSharedLibraryTarget
#define SpecialSharedLibraryTarget(libname,rev,hname,solist,down,up)			@@\
AllTarget(Concat(lib,libname.so.rev))					@@\
									@@\
Concat(lib,libname.so.rev):  solist					@@\
	$(RM) $@~							@@\
	(cd down; $(LD) -o up/$@~ $(SHLIBLDFLAGS) -h hname solist)		@@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@							@@\
	$(CP) $@ ../hname						@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.so.rev)

#endif /* SpecialSharedLibraryTarget */

#if UslLocalityTuning
/*
 * InstallFurLibrary - generate rules to install a Fur library.
 */

#ifndef FurSharedLibraryTarget3
#define FurSharedLibraryTarget3(libname,rev,objs1,objs2,objs3,extlibs,down,up)	@@\
AllTarget(Concat(lib,libname.so.F))					@@\
									@@\
Concat(lib,libname.so.F):  objs1 objs2 objs3				@@\
	$(RM) libname.r* $@~						@@\
	(cd down; $(LD) -r -o up/libname.r1 objs1) 			@@\
	(cd down; $(LD) -r -o up/libname.r2 objs2) 			@@\
	(cd down; $(LD) -r -o up/libname.r3 objs3) 			@@\
	$(LD) -r -o libname.r libname.r1 libname.r2 libname.r3		@@\
	$(FUR) -l libname.funcs libname.r				@@\
	$(LD) -o $@~ $(SHLIBLDFLAGS) -h Concat(lib,libname.so.rev) libname.r extlibs	@@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@ 							@@\
	$(RM) Concat(lib,libname.so) 					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
	$(RM) libname.r1 libname.r2 libname.r3				@@\
									@@\
clean::									@@\
	$(RM) libname.r* Concat(lib,libname.so.F)

#endif /* FurSharedLibraryTarget3 */

#ifndef FurSharedLibraryTarget
#define FurSharedLibraryTarget(libname,rev,solist,down,up)		@@\
AllTarget(Concat(lib,libname.so.F))					@@\
									@@\
Concat(lib,libname.so.F):  solist					@@\
	$(RM) libname.r* $(@)~						@@\
	(cd down; $(LD) -r -o up/libname.r solist)			@@\
	$(FUR) -l libname.funcs libname.r				@@\
	$(LD) -o $@~ $(SHLIBLDFLAGS) -h Concat(lib,libname.so.rev) libname.r	@@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@							@@\
	$(RM) Concat(lib,libname.so) 					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
									@@\
clean::									@@\
	$(RM) libname.r Concat(lib,libname.so.F)

#endif /* FurSharedLibraryTarget */

#ifndef FurSharedLibraryTarget_a
#define FurSharedLibraryTarget_a(libname,rev,solist,extlibs,down,up)		@@\
AllTarget(Concat(lib,libname.so.F))					@@\
									@@\
Concat(lib,libname.so.F):  solist					@@\
	$(RM) libname.r* $(@)~						@@\
	(cd down; $(LD) -r -o up/libname.r solist)			@@\
	$(FUR) -l libname.funcs libname.r				@@\
	$(LD) -o $@~ $(SHLIBLDFLAGS) -h Concat(lib,libname.so.rev) libname.r extlibs	@@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@							@@\
	$(RM) Concat(lib,libname.so) 					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
									@@\
clean::									@@\
	$(RM) libname.r Concat(lib,libname.so.F)

#endif /* FurSharedLibraryTarget_a */

#ifndef SpecialFurSharedLibraryTarget
#define SpecialFurSharedLibraryTarget(libname,rev,hname,solist,down,up)	@@\
AllTarget(Concat(lib,libname.so.F))					@@\
									@@\
Concat(lib,libname.so.F):  solist					@@\
	$(RM) libname.r* $(@)~						@@\
	(cd down; $(LD) -r -o up/libname.r solist)			@@\
	$(FUR) -l libname.funcs libname.r				@@\
	$(LD) -o $@~ $(SHLIBLDFLAGS) -h hname libname.r			@@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@							@@\
	$(RM) Concat(lib,libname.so) 					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
									@@\
clean::									@@\
	$(RM) libname.r Concat(lib,libname.so.F)

#endif /* SpecialFurSharedLibraryTarget */

#ifndef InstallFurLibrary
#define	InstallFurLibrary(libname,rev,dest)				@@\
install:: Concat(lib,libname.so.F) 					@@\
	MakeDir($(DESTDIR)dest/NOFUR)					@@\
	$(MV) $(DESTDIR)dest/Concat(lib,libname.so.rev) $(DESTDIR)dest/NOFUR; @@\
	$(INSTALL) $(INSTLIBFLAGS) Concat(lib,libname.so.F) $(DESTDIR)dest; @@\
	$(MV) $(DESTDIR)dest/Concat(lib,libname.so.F) $(DESTDIR)dest/Concat(lib,libname.so.rev); @@\
	$(RM) $(DESTDIR)dest/Concat(lib,libname.so)			@@\
	(cd $(DESTDIR)dest; $(LN) Concat(lib,libname.so.rev) Concat(lib,libname.so))
#endif /* InstallFurLibrary */

#else /* UslLocalityTuning */

#define FurSharedLibraryTarget3(libname,rev,objs1,objs2,objs3,extlibs,down,up)	@@\
$(_NULLCMD_)

#define FurSharedLibraryTarget(libname,rev,solist,down,up)		@@\
$(_NULLCMD_)
#define FurSharedLibraryTarget_a(libname,rev,solist,extlibs,down,up)	@@\
$(_NULLCMD_)
#define SpecialFurSharedLibraryTarget(libname,rev,hname,solist,down,up)	@@\
$(_NULLCMD_)
#define	InstallFurLibrary(libname,rev,dest)				@@\
$(_NULLCMD_)

#endif /* UslLocalityTuning */

/*
 * SharedLibraryDataTarget - generate rules to create shlib data file;
 */
#ifndef SharedLibraryDataTarget
#define SharedLibraryDataTarget(libname,rev,salist)
#endif /* SharedLibraryTarget */


/*
 * USL, SVR4 SPECIAL RULES: add new rules as needed.
 */
#ifndef SharedLibraryObjectRule
#define SharedLibraryObjectRule()					@@\
.c.o:									@@\
	$(CC) -c -KPIC $(CFLAGS) $<
#endif

#ifndef SharedLibraryTarget1
#define SharedLibraryTarget1(libname,rev,solist,down,up)		@@\
AllTarget(Concat(lib,libname.so.rev))					@@\
									@@\
Concat(lib,libname.so.rev):  solist					@@\
	-@if [ -f $@ ]; then $(MV) $@ O$@; fi				@@\
	(cd down; $(CC) -G -o up/$@ $(SHLIBLDFLAGS) -h $@ solist)	@@\
	$(RM) Concat(lib,libname.so)					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.so.rev) Concat(lib,libname.so)
#endif

#ifndef SharedLibraryTarget2
#define SharedLibraryTarget2(libname,solist,down,up)		@@\
AllTarget(Concat(lib,libname.so))					@@\
									@@\
Concat(lib,libname.so):  solist					@@\
	$(RM) $@~							@@\
	(cd down; $(CC) -G -o up/$@~ $(SHLIBLDFLAGS) -h $@ solist)	@@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@						@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.so)
#endif

/*
 * SharedLibraryTarget3 - generate rules to create a shared library;
 * build it into a different name so that we do not hose people by having
 * the library gone for long periods.
 *
 * This is similar to SharedLibraryTarget but if the argument list is too
 * long, it fails on some machines; So, build the shared library incrementally
 * with OBJS1, OBJS2 and OBJS3
 */
#ifndef SharedLibraryTarget3
#define SharedLibraryTarget3(libname,rev,objs1,objs2,objs3,down,up)	@@\
AllTarget(Concat(lib,libname.so.rev))					@@\
									@@\
Concat(lib,libname.so.rev):  objs1 objs2 objs3				@@\
	$(RM) $@~							@@\
	(cd down; $(LD) -r -o up/$(@).r1 objs1) 			@@\
	(cd down; $(LD) -r -o up/$(@).r2 objs2) 			@@\
	(cd down; $(LD) -o up/$@~ $(SHLIBLDFLAGS) -h $(@) up/$(@).r[12] objs3) @@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@ 							@@\
	$(RM) Concat(lib,libname.so)					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
	$(RM) $(@).r1 $(@).r2 						@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.so.rev) Concat(lib,libname.so)

#endif /* SharedLibraryTarget3 */

#ifndef SharedLibraryTarget3a
#define SharedLibraryTarget3a(libname,rev,objs1,objs2,objs3,extlibs,down,up)@@\
AllTarget(Concat(lib,libname.so.rev))					@@\
									@@\
Concat(lib,libname.so.rev):  objs1 objs2 objs3				@@\
	$(RM) $@~							@@\
	(cd down; $(LD) -r -o up/$(@).r1 objs1) 			@@\
	(cd down; $(LD) -r -o up/$(@).r2 objs2) 			@@\
	(cd down; $(LD) -o up/$@~ $(SHLIBLDFLAGS) -h $(@) up/$(@).r[12] objs3 extlibs) @@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@ 							@@\
	$(RM) Concat(lib,libname.so)					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
	$(RM) $(@).r1 $(@).r2 						@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.so.rev) Concat(lib,libname.so)

#endif /* SharedLibraryTarget3a */

/*
 * SharedLibraryDepTarget - generate rules to create a shared library;
 * build it into a different name so that we do not hose people by having
 * the library gone for long periods.  This lib will be dependent on the
 * deplib argument library.
 */
#ifndef SharedLibraryDepTarget
#define SharedLibraryDepTarget(libname,rev,solist,down,up,deplib)			@@\
AllTarget(Concat(lib,libname.so.rev))					@@\
									@@\
Concat(lib,libname.so.rev):  solist					@@\
	$(RM) $@~							@@\
	(cd down; $(LD) -o up/$@~ $(SHLIBLDFLAGS) -h $@ solist deplib)		@@\
	$(RM) $@ 							@@\
	$(MV) $@~ $@						@@\
	$(RM) Concat(lib,libname.so)					@@\
	$(LN) $@ Concat(lib,libname.so)					@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.so.rev) Concat(lib,libname.so)

#endif /* SharedLibraryDepTarget */
